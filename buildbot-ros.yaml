- name: prepare for buildbot
  hosts: [ master, slaves ]
  sudo: yes
  tasks:
    - user: home={{ home }} name=buildbot state=present system=yes
    - apt: name={{ item }} state=latest
      with_items:
        - python-dev
        - python-pip
        - python-virtualenv
        - git

- name: buildbot slave setup
  hosts: slaves
  sudo: yes
  sudo_user: buildbot
  tasks:
    - copy: "content='buildbot  ALL= NOPASSWD: SETENV: /usr/bin/git-*, /usr/sbin/*builder\n'
            dest=/etc/sudoers.d/buildbot owner=0 group=0 mode=0440"
      sudo_user: root
    - apt: name={{ item }} state=latest
      with_items:
        - reprepro
        - cowbuilder
        - debootstrap
        - devscripts
        - git-buildpackage
        - debhelper
      sudo_user: root

    - pip: name={{ item }} virtualenv={{ venv }}
      with_items:
        - buildbot-slave
    - copy: src=scripts/{{ item }} dest={{ venv }}/bin/{{ item }} mode=755
      with_items:
        - cowbuilder-update.py
        - build_helpers.py
    - template: src=scripts/{{ item }}.j2 dest={{ venv }}/bin/{{ item }} mode=755
      with_items:
        - venv_exec
        - reprepro-include.bash 
    - command: "{{ venv }}/bin/venv_exec buildslave
                  create-slave {{ home }}/{{ item }}
                               {{ groups['master'][0] }}:9989
                               {{ item }} mebuildslotsaros"
      with_items:
        - rosbuilder1
        - rosbuilder2
    - command: "{{ venv }}/bin/venv_exec buildslave start {{ home }}/{{ item }}"
      ignore_errors: true
      with_items:
        - rosbuilder1
        - rosbuilder2

- name: buildbot master setup
  hosts: master
  sudo: yes
  sudo_user: buildbot
  tasks:
    - pip: name={{ item }} virtualenv={{ venv }}
      with_items:
        - rosdistro
        - buildbot
        - requests
    - copy: src=buildmaster/ dest={{ master_dir }}
    - command: "{{ venv }}/bin/venv_exec buildbot create-master {{ master_dir }}
                 creates={{ master_dir }}/buildbot.tac"
    - lineinfile: "dest={{ master_dir }}/buildbot.tac regexp='^umask' line='umask = 0022'"
    - file: name={{ building_repo }} state=directory mode=755
    - file: name={{ building_repo }}/ubuntu/conf state=directory
    - template: src=distributions.j2 dest={{ home }}/building/ubuntu/conf/distributions
    - command: "{{ venv }}/bin/venv_exec buildbot start {{ master_dir }}"
      ignore_errors: true

